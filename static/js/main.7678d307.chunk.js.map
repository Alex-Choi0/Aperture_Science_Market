{"version":3,"sources":["components/Nav.js","actions/index.js","components/Item.js","pages/ItemListContainer.js","components/Toast.js","components/NotificationCenter.js","components/CartItem.js","components/OrderSummary.js","pages/ShoppingCart.js","App.js","reducers/initialState.js","reducers/itemReducer.js","reducers/notificationReducer.js","reducers/index.js","store/store.js","serviceWorker.js","index.js"],"names":["Nav","state","useSelector","itemReducer","id","src","alt","to","cartItems","length","ADD_TO_CART","REMOVE_FROM_CART","SET_QUANTITY","ENQUEUE_NOTIFICATION","DEQUEUE_NOTIFICATION","notify","message","dismissTime","dispatch","uuid","Math","random","enqueueNotification","setTimeout","dequeueNotification","type","payload","Item","item","handleClick","className","img","name","data-testid","price","onClick","e","ItemListContainer","items","useDispatch","itemId","map","el","includes","quantity","idx","Toast","text","useState","isFading","setIsFading","useEffect","mounted","NofiticationCenter","notificationReducer","notifications","n","CartItem","checkedItems","handleCheckChange","handleQuantityChange","handleDelete","onChange","target","checked","min","value","Number","OrderSummary","totalQty","total","ShoppingCart","setCheckedItems","filter","setQuantity","removeFromCart","renderItems","indexOf","cartIdArr","i","getTotal","App","exact","path","NotificationCenter","initialState","action","console","log","bool","addItem","Object","assign","delId","delCartItems","findIndex","obj","slice","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7678d307.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n\n  const state = useSelector(state => state.itemReducer);\n\n  return (\n    <div id=\"nav-body\">\n      <span id=\"title\">\n        <img id=\"logo\" src=\"../Aperture_Science.png\" alt=\"logo\" />\n        <span id=\"name\">APERTURE SCIENCE</span>\n      </span>\n      <div id=\"menu\">\n        <Link to=\"/\">상품리스트</Link>\n        <Link to=\"/shoppingcart\">\n          장바구니<span id=\"nav-item-counter\">{state.cartItems.length}</span>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","// action types\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const SET_QUANTITY = \"SET_QUANTITY\";\nexport const NOTIFY = \"NOTIFY\";\nexport const ENQUEUE_NOTIFICATION = \"ENQUEUE_NOTIFICATION\";\nexport const DEQUEUE_NOTIFICATION = \"DEQUEUE_NOTIFICATION\";\n\n// actions creator functions\nexport const addToCart = (itemId) => {\n  return {\n    type: ADD_TO_CART,\n    payload: {\n      quantity: 1,\n      itemId\n    }\n  }\n}\n\nexport const removeFromCart = (itemId) => {\n    return {\n      //TODO\n      type: REMOVE_FROM_CART,\n      payload: {\n        itemId\n    }\n  }\n}\n\nexport const setQuantity = (itemId, quantity) => {\n    return {\n      //TODO\n      type: SET_QUANTITY,\n      payload: {\n        itemId,\n        quantity\n    }\n  }\n}\n\nexport const notify = (message, dismissTime = 5000) => dispatch => {\n  const uuid = Math.random()\n  dispatch(enqueueNotification(message, dismissTime, uuid))\n  setTimeout(() => {\n    dispatch(dequeueNotification())\n  }, dismissTime)\n}\n\nexport const enqueueNotification = (message, dismissTime, uuid) => {\n  return {\n    type: ENQUEUE_NOTIFICATION,\n    payload: {\n      message,\n      dismissTime,\n      uuid\n    }\n  }\n}\n\nexport const dequeueNotification = () => {\n  return {\n    type: DEQUEUE_NOTIFICATION\n  }\n}","import React from 'react'\n\nexport default function Item({ item, handleClick }) {\n\n  return (\n    <div key={item.id} className=\"item\">\n      <img className=\"item-img\" src={item.img} alt={item.name}></img>\n      <span className=\"item-name\" data-testid={item.name}>{item.name}</span>\n      <span className=\"item-price\">{item.price}</span>\n      <button className=\"item-button\" onClick={(e) => handleClick(e, item.id)}>장바구니 담기</button>\n    </div>\n  )\n}\n","import React from 'react';\nimport { addToCart, notify } from '../actions/index';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Item from '../components/Item';\n\nfunction ItemListContainer() {\n  const state = useSelector(state => state.itemReducer);\n  const { items, cartItems } = state;\n  const dispatch = useDispatch();\n\n  const handleClick = (item) => {\n    if (!cartItems.map((el) => el.itemId).includes(item.id)) {\n      //TODO: dispatch 함수를 호출하여 아이템 추가에 대한 액션을 전달하세요.\n      dispatch(notify(`장바구니에 ${item.name}이(가) 추가되었습니다.`));\n      dispatch(addToCart(item.id));\n    }\n    else {\n      dispatch(notify('이미 추가된 상품입니다.'))\n    }\n  }\n\n  return (\n    <div id=\"item-list-container\">\n      <div id=\"item-list-body\">\n        <div id=\"item-list-title\">쓸모없는 선물 모음</div>\n        {items.map((item, idx) => <Item item={item} key={idx} handleClick={() => {\n          handleClick(item)\n        }} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default ItemListContainer;\n","import React, { useEffect, useState } from 'react'\n\nexport default function Toast({ text, dismissTime }) {\n  const [isFading, setIsFading] = useState(false)\n\n  useEffect(() => {\n    let mounted = true\n    setTimeout(() => {\n      if (mounted) {\n        setIsFading(true)\n      }\n    }, dismissTime - 500)\n\n    return () => {\n      mounted = false\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className={`notification ${isFading ? 'fade-out' : ''}`}>\n      {text}\n    </div>\n  )\n}\n","import { useSelector } from 'react-redux';\nimport Toast from './Toast';\n\nfunction NofiticationCenter() {\n  const state = useSelector(state => state.notificationReducer);\n\n  return <div className=\"notification-container top-right\">\n    {\n      state.notifications.map((n) =>\n        <Toast key={n.uuid} text={n.message} dismissTime={n.dismissTime} />\n      )\n    }\n  </div>\n}\n\nexport default NofiticationCenter","import React from 'react'\n\nexport default function CartItem({\n  item,\n  checkedItems,\n  handleCheckChange,\n  handleQuantityChange,\n  handleDelete,\n  quantity\n}) {\n  return (\n    <li className=\"cart-item-body\">\n      <input\n        type=\"checkbox\"\n        className=\"cart-item-checkbox\"\n        onChange={(e) => {\n          handleCheckChange(e.target.checked, item.id)\n        }}\n        checked={checkedItems.includes(item.id) ? true : false} >\n      </input>\n      <div className=\"cart-item-thumbnail\">\n        <img src={item.img} alt={item.name} />\n      </div>\n      <div className=\"cart-item-info\">\n        <div className=\"cart-item-title\" data-testid={`cart-${item.name}`}>{item.name}</div>\n        <div className=\"cart-item-price\">{item.price} 원</div>\n      </div>\n      <input\n        type=\"number\"\n        min={1}\n        className=\"cart-item-quantity\"\n        value={quantity}\n        onChange={(e) => {\n          handleQuantityChange(Number(e.target.value), item.id)\n        }}>\n      </input>\n      <button className=\"cart-item-delete\" onClick={() => { handleDelete(item.id) }}>삭제</button>\n    </li >\n  )\n}\n","import React from 'react'\n\nexport default function OrderSummary({ totalQty, total }) {\n  return (\n    <div id=\"order-summary-container\">\n      <h4>주문 합계</h4>\n      <div id=\"order-summary\">\n        총 아이템 개수 : <span className=\"order-summary-text\">{totalQty} 개</span>\n        <hr></hr>\n        <div id=\"order-summary-total\">\n          합계 : <span className=\"order-summary-text\">{total} 원</span>\n        </div>\n      </div>\n    </div >\n  )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeFromCart, setQuantity } from '../actions';\nimport CartItem from '../components/CartItem'\nimport OrderSummary from '../components/OrderSummary'\n\nexport default function ShoppingCart() {\n\n  const state = useSelector(state => state.itemReducer);\n  const { cartItems, items } = state\n  const dispatch = useDispatch();\n  const [checkedItems, setCheckedItems] = useState(cartItems.map((el) => el.itemId))\n\n  const handleCheckChange = (checked, id) => {\n    if (checked) {\n      setCheckedItems([...checkedItems, id]);\n    }\n    else {\n      setCheckedItems(checkedItems.filter((el) => el !== id));\n    }\n  };\n\n  const handleAllCheck = (checked) => {\n    if (checked) {\n      setCheckedItems(cartItems.map((el) => el.itemId))\n    }\n    else {\n      setCheckedItems([]);\n    }\n  };\n\n  const handleQuantityChange = (quantity, itemId) => {\n    //TODO: dispatch 함수를 호출하여 액션을 전달하세요.\n    dispatch(setQuantity(itemId, quantity))\n  }\n\n  const handleDelete = (itemId) => {\n    setCheckedItems(checkedItems.filter((el) => el !== itemId))\n    //TODO: dispatch 함수를 호출하여 액션을 전달하세요.\n    dispatch(removeFromCart(itemId));\n  }\n\n  const getTotal = () => {\n    let cartIdArr = cartItems.map((el) => el.itemId)\n    let total = {\n      price: 0,\n      quantity: 0,\n    }\n    for (let i = 0; i < cartIdArr.length; i++) {\n      if (checkedItems.indexOf(cartIdArr[i]) > -1) {\n        let quantity = cartItems[i].quantity\n        let price = items.filter((el) => el.id === cartItems[i].itemId)[0].price\n\n        total.price = total.price + quantity * price\n        total.quantity = total.quantity + quantity\n      }\n    }\n    return total\n  }\n\n  const renderItems = items.filter((el) => cartItems.map((el) => el.itemId).indexOf(el.id) > -1)\n  const total = getTotal()\n\n  return (\n    <div id=\"item-list-container\">\n      <div id=\"item-list-body\">\n        <div id=\"item-list-title\">장바구니</div>\n        <span id=\"shopping-cart-select-all\">\n          <input\n            type=\"checkbox\"\n            checked={\n              checkedItems.length === cartItems.length ? true : false\n            }\n            onChange={(e) => handleAllCheck(e.target.checked)} >\n          </input>\n          <label >전체선택</label>\n        </span>\n        <div id=\"shopping-cart-container\">\n          {!cartItems.length ? (\n            <div id=\"item-list-text\">\n              장바구니에 아이템이 없습니다.\n            </div>\n          ) : (\n              <div id=\"cart-item-list\">\n                {renderItems.map((item, idx) => {\n                  const quantity = cartItems.filter(el => el.itemId === item.id)[0].quantity\n                  return <CartItem\n                    key={idx}\n                    handleCheckChange={handleCheckChange}\n                    handleQuantityChange={handleQuantityChange}\n                    handleDelete={handleDelete}\n                    item={item}\n                    checkedItems={checkedItems}\n                    quantity={quantity}\n                  />\n                })}\n              </div>\n            )}\n          <OrderSummary total={total.price} totalQty={total.quantity} />\n        </div>\n      </div >\n    </div>\n  )\n}\n","import React, { useState } from 'react';\r\nimport Nav from './components/Nav';\r\nimport ItemListContainer from './pages/ItemListContainer';\r\nimport NotificationCenter from './components/NotificationCenter';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport ShoppingCart from './pages/ShoppingCart';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Nav />\r\n      <Switch>\r\n        <Route exact={true} path=\"/\">\r\n          <ItemListContainer />\r\n        </Route>\r\n        <Route path=\"/shoppingcart\">\r\n          <ShoppingCart />\r\n        </Route>\r\n      </Switch>\r\n      <NotificationCenter />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const initialState =\n{\n  \"items\": [\n    {\n      \"id\": 1,\n      \"name\": \"Portal Gun\",\n      \"img\": \"../../images/portalGun.jpg\",\n      \"price\": 9990,\n      \"explain\" : \"2개의 웜홀을 생성하여 두 지점의 공간을 연결한다\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"P-Body\",\n      \"img\": \"../images/P_Body.png\",\n      \"price\": 12000,\n      \"explain\" : \"포탈건의 실험을 진행할 안전한 로봇1\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"atlas\",\n      \"img\": \"../images/atlas.png\",\n      \"price\": 12000,\n      \"explain\" : \"포탈건의 실험을 진행할 안전한 로봇2\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Wheatley\",\n      \"img\": \"../images/wheatley.jpg\",\n      \"price\": 4900,\n      \"explain\" : \"인공지능을 멍청하게 만들기 위해 설계된 전자두뇌\"\n    },\n    {\n      \"id\": 5,\n      \"name\": \"Cube\",\n      \"img\": \"../images/cube.jpeg\",\n      \"price\": 2900,\n      \"explain\" : \"퍼즐을 풀기위한 큐브\"\n    },\n    {\n      \"id\": 6,\n      \"name\": \"Companion Cube\",\n      \"img\": \"../images/compainon_cube.png\",\n      \"price\": 3900,\n      \"explain\" : \"비밀을 간직한 큐브\"\n    },\n    {\n      \"id\": 7,\n      \"name\": \"Turret\",\n      \"img\": \"../images/turret.png\",\n      \"price\": 6900,\n      \"explain\" : \"운동에너지 만으로 총알을 발사하는 터렛\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Panel\",\n      \"img\": \"../images/panels.webp\",\n      \"price\": 9900,\n      \"explain\" : \"왜있는지 모르는 패널(재고떨이)\"\n    }\n  ],\n  \"cartItems\": [\n\n  ],\n  \"notifications\": [\n\n  ]\n}\n","import { REMOVE_FROM_CART, ADD_TO_CART, SET_QUANTITY } from \"../actions/index\";\nimport { initialState } from \"./initialState\";\n\nconst itemReducer = (state = initialState, action) => {\n  console.log(\"itemReducer active\");\n  switch (action.type) {\n    case ADD_TO_CART:\n      //TODO\n            // state.cartItems//action.payload.quantity\n\n            let quantity = 0;\n            let bool = false; // 장바구니에 포함되 있으면 참\n            let addItem = {};\n      \n            // 장바구니에 몇개의 품목이 있는지 모르기때문에 이전 장바구니(state.cratItems)의 항목만큼\n            // for루프를 돌린다.\n            for(let i = 0; i < state.cartItems.length; i++){\n              // 장바구니에 이미 포함되 있음(state.cartItem[i]은 이전 장바구니의 i번째 목록정보)\n              if(state.cartItems[i] === action.payload.itemId){\n                // 장비구니에 이미 포함되어 있기때문에 bool값은 참이다\n                bool = true;\n                // action.payload.itemId는 장바구니에 존재하기 때문에\n                // quantity는 기존의에 추가한 갯수에 1을 추가한다.\n                quantity = 1 + state.cartItems[i].quantity;\n                // 이미 이전 항목에 포함되 있는것을 확인했기 때문에 나머지 항목은 무시한다.\n                break;\n              }\n            }\n      \n            if(bool){ // 기존 장바구니에 포함 되어 있을시\n              addItem = {\n                // 기존 항목의 아이디를 추가한다.\n                \"itemId\": action.payload.itemId,\n                // 기존항목에서 +1한 수량을 추가한다.\n                \"quantity\": quantity,\n              }\n            }\n      \n            else{ // 기존 장바구니에 항목이 없을시\n              addItem = {\n                // 새로운 항목의 아이디를 추가한다.\n                \"itemId\": action.payload.itemId,\n                // 새로운 항목이기 때문에 quantity는 1이다.\n                \"quantity\": 1, \n              }\n            }\n      \n            \n            // state : 이전 state, state.cartItems : 이전 카트 항목, addItem : 추가 항목\n            return Object.assign({}, state, {\n              cartItems: [...state.cartItems, addItem]\n            });\n    case REMOVE_FROM_CART:\n      //TODO\n      const delId = action.payload.itemId;\n      const delCartItems = state.cartItems.filter((item) => \n        item.itemId !== delId);\n\n        return Object.assign({}, state, {\n          cartItems: [...delCartItems]\n        });\n\n    case SET_QUANTITY:\n      let idx = state.cartItems.findIndex(el => el.itemId === action.payload.itemId)\n      //TODO\n\n      const obj = [...state.cartItems];\n      console.log(idx, obj);\n\n      if(idx === -1) return state;\n\n      obj[idx].quantity = action.payload.quantity;\n      console.log(idx, obj);\n\n\n      // return {...state, cartItems : obj};\n      return Object.assign({}, state, {\n        cartItems: [...obj]\n      });\n\n\n    default:\n      return state;\n  }\n}\n\nexport default itemReducer;","import { ENQUEUE_NOTIFICATION, DEQUEUE_NOTIFICATION } from \"../actions/index\";\nimport { initialState } from \"./initialState\";\n\nconst notificationReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case ENQUEUE_NOTIFICATION:\n      return Object.assign({}, state, {\n        notifications: [...state.notifications, action.payload]\n      })\n    case DEQUEUE_NOTIFICATION:\n      return Object.assign({}, state, {\n        notifications: state.notifications.slice(1)\n      })\n    default:\n      return state;\n  }\n}\n\nexport default notificationReducer;","import { combineReducers } from 'redux';\nimport itemReducer from './itemReducer';\nimport notificationReducer from './notificationReducer';\n\nconst rootReducer = combineReducers({\n  itemReducer,\n  notificationReducer\n});\n\nexport default rootReducer;","import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from '../reducers/index';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n  : compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './store/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}